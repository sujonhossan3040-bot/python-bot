import telebot
import threading
import time
import re
from datetime import datetime, timedelta

# ======================
# üîπ Bot Token
# ======================
BOT_TOKEN = "8230826781:AAHvHcP1z1x3L1qPIu990w10EA_QmlQnz4Q"  # ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ü ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶¨‡¶∏‡¶æ‡¶®
bot = telebot.TeleBot(BOT_TOKEN)

# ======================
# üîπ ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï ‡¶°‡¶ø‡¶ü‡ßá‡¶ï‡¶∂‡¶®
# ======================
link_pattern = re.compile(r"(https?://\S+|t\.me/\S+)")

# üîπ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ø‡¶Ç
user_links = {}

# ======================
# üîπ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
# ======================
def schedule_delete(chat_id, message_id, delay=300):
    """‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (delay ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá)"""
    def delete_message():
        time.sleep(delay)
        try:
            bot.delete_message(chat_id, message_id)
        except Exception as e:
            print("Error:", e)
    threading.Thread(target=delete_message).start()

# ======================
# üîπ ‡¶®‡¶§‡ßÅ‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶ì‡ßü‡ßá‡¶≤‡¶ï‡¶æ‡¶Æ
# ======================
@bot.message_handler(content_types=['new_chat_members'])
def welcome_user(message):
    for user in message.new_chat_members:
        notice = bot.send_message(
            message.chat.id,
            f"üëã ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ {user.first_name or 'User'}!\n"
            f"üÜî User ID: {user.id}\n"
            f"üí¨ Group: {message.chat.title}",
            parse_mode="Markdown"
        )
        schedule_delete(message.chat.id, notice.message_id, delay=600)  # 10 ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶™‡¶∞‡ßá ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü

# ======================
# üîπ /job ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°
# ======================
@bot.message_handler(commands=['job'])
def job_command(message):
    reply = bot.reply_to(message, "üíº ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ú‡¶¨ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶π‡¶≤‡ßã‡•§")
    schedule_delete(message.chat.id, reply.message_id, delay=600)  # 10 ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶™‡¶∞‡ßá ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü

# ======================
# üîπ ‡¶∏‡¶¨ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
# ======================
@bot.message_handler(content_types=['text', 'photo', 'video', 'document', 'audio', 'voice', 'sticker', 'animation'])
def handle_messages(message):
    user_id = message.from_user.id
    chat_id = message.chat.id

    # ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï ‡¶π‡¶≤‡ßá ‡¶∏‡¶æ‡¶•‡ßá ‡¶∏‡¶æ‡¶•‡ßá ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü + ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü
    if message.content_type == 'text' and link_pattern.search(message.text):
        try:
            bot.delete_message(chat_id, message.message_id)

            # ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶¨‡¶æ‡ßú‡¶æ‡¶®‡ßã
            user_links[user_id] = user_links.get(user_id, 0) + 1
            print(f"User {user_id} link count: {user_links[user_id]}")

            # ‡¶Ø‡¶¶‡¶ø 5 ‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï ‡¶∂‡ßá‡ßü‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá
            if user_links[user_id] > 5:
                until_date = datetime.now() + timedelta(hours=12)
                bot.restrict_chat_member(
                    chat_id,
                    user_id,
                    until_date=until_date,
                    can_send_messages=False
                )
                warn = bot.send_message(
                    chat_id,
                    f"‚ö†Ô∏è User {message.from_user.first_name} ({user_id}) 12 ‡¶ò‡¶®‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï ‡¶∏‡ßç‡¶™‡ßç‡¶Ø‡¶æ‡¶Æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∞‡¶£‡ßá!"
                )
                schedule_delete(chat_id, warn.message_id, delay=600)

        except Exception as e:
            print("Error:", e)
    else:
        # ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶∏‡¶¨ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡ß´ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶™‡¶∞‡ßá ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü
        schedule_delete(chat_id, message.message_id, delay=300)

# ======================
# üîπ Bot ‡¶ö‡¶æ‡¶≤‡ßÅ
# ======================
print("ü§ñ Bot is running...")
bot.infinity_polling()